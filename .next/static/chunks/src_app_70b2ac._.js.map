{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/victormwoya/Documents/ProgrammingProjects/strong-pass/src/app/components/PasswordGenerator.js"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\nexport default function PasswordGenerator() {\n  const [password, setPassword] = useState('');\n  const [length, setLength] = useState(16);\n\n  const [includeLowerCase, setincludeLowerCase] = useState(true)\n  const [includeNumbers, setIncludeNumbers] = useState(true)\n  const [includeUpperCase, setIncludeUpperCase] = useState(true)\n  const [includeSpecialCharacters, setIncludeSpecialCharacters] = useState(true)\n  \n\n  // Function to generate a random password\n  const generatePassword = (length) => {\n    let charset = '';\n    if (includeLowerCase) charset += 'abcdefghijklmnopqrstuvwxyz';\n    if (includeUpperCase) charset += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    if (includeNumbers) charset += '0123456789';\n    if (includeSpecialCharacters) charset += '!@#$%^&*()_-+=<>?';\n\n    let generatePass = '';\n\n    if (charset === '') {\n      generatePass = \"Select one of the above\"\n      setPassword(generatePass);\n      return;\n    }\n\n   \n  \n\n   \n\n    for (let i = 0; i < length; i++) {\n      generatePass += charset.charAt(Math.floor(Math.random() * charset.length));\n    }\n\n    if(!length || length <8 || length > 64){\n      setLength(16)\n      generatePass = \"Your password length should be between 8 and 64\"\n    }\n\n    setPassword(generatePass); // Set the generated password\n  };\n\n\n  const copyPass = () =>  {\n    navigator.clipboard.writeText(password);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center p-8 space-y-4 text-xl absolute inset-x-0 top-0\">\n      <h2 className=\"text-center text-2xl font-semibold md:underline :decoration-emerald-500 underline-offset-4\">Strong Password Generator</h2>\n      <input\n        type=\"number\"\n        value={length}\n        onChange={(e) => setLength(e.target.value)}\n        className=\"p-2 border text-black rounded-lg w-20 text-center\"\n        min=\"8\"\n        max=\"64\"\n      />\n\n      <div className=\"text-center p-6  sm:flex space-x-4\">\n        <label>\n            <input\n                type=\"checkbox\"\n                checked = {includeLowerCase}\n                onChange={() => setincludeLowerCase(!includeLowerCase) }\n                className=\"mr-2\"\n            />Lowercase <br/>\n            \n        </label>\n\n        <label>\n            <input\n                type=\"checkbox\"\n                checked = {includeUpperCase}\n                onChange={() => setIncludeUpperCase(!includeUpperCase) }\n                className=\"mr-2\"\n            />Uppercase<br/>\n            \n        </label>\n\n        <label>\n            <input\n                type=\"checkbox\"\n                checked = {includeSpecialCharacters}\n                onChange={() => setIncludeSpecialCharacters(!includeSpecialCharacters) }\n                className=\"mr-2\"\n            />Special Characters <br/>\n            \n        </label>\n\n        <label>\n            <input\n                type=\"checkbox\"\n                checked = {includeNumbers}\n                onChange={() => setIncludeNumbers(!includeNumbers) }\n                className=\"mr-2\"\n            />Numbers\n            \n        </label>\n\n      </div>\n\n  \n\n      <button\n        onClick={() => generatePassword(length)} // Call generatePassword when clicked\n        className=\"px-4 py-2 bg-emerald-600 rounded-lg hover:bg-emerald-700\"\n      >\n        Generate Password\n      </button>\n      {password && (\n        <div className=\"m-4 px-4 text-black bg-slate-200 rounded-lg \">\n          <strong>Generated Password:</strong>\n          <div className=\"mt-2 text-xl font-mono \">{password}</div>\n        </div>\n      )}\n    <button\n        onClick={copyPass}\n        className=\"px-4 py-2 bg-emerald-600 rounded-lg hover:bg-emerald-700 active:bg-emerald-800 transition duration-150 ease-in-out\"\n      >\n        Copy Password\n      </button>\n    </div>\n  );\n};\n\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,0BAA0B,4BAA4B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAGzE,yCAAyC;IACzC,MAAM,mBAAmB,CAAC;QACxB,IAAI,UAAU;QACd,IAAI,kBAAkB,WAAW;QACjC,IAAI,kBAAkB,WAAW;QACjC,IAAI,gBAAgB,WAAW;QAC/B,IAAI,0BAA0B,WAAW;QAEzC,IAAI,eAAe;QAEnB,IAAI,YAAY,IAAI;YAClB,eAAe;YACf,YAAY;YACZ;QACF;QAOA,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;YAC/B,gBAAgB,QAAQ,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ,MAAM;QAC1E;QAEA,IAAG,CAAC,UAAU,SAAQ,KAAK,SAAS,IAAG;YACrC,UAAU;YACV,eAAe;QACjB;QAEA,YAAY,eAAe,6BAA6B;IAC1D;IAGA,MAAM,WAAW;QACf,UAAU,SAAS,CAAC,SAAS,CAAC;IAChC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA6F;;;;;;0BAC3G,6LAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;gBACzC,WAAU;gBACV,KAAI;gBACJ,KAAI;;;;;;0BAGN,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACG,6LAAC;gCACG,MAAK;gCACL,SAAW;gCACX,UAAU,IAAM,oBAAoB,CAAC;gCACrC,WAAU;;;;;;4BACZ;0CAAU,6LAAC;;;;;;;;;;;kCAIjB,6LAAC;;0CACG,6LAAC;gCACG,MAAK;gCACL,SAAW;gCACX,UAAU,IAAM,oBAAoB,CAAC;gCACrC,WAAU;;;;;;4BACZ;0CAAS,6LAAC;;;;;;;;;;;kCAIhB,6LAAC;;0CACG,6LAAC;gCACG,MAAK;gCACL,SAAW;gCACX,UAAU,IAAM,4BAA4B,CAAC;gCAC7C,WAAU;;;;;;4BACZ;0CAAmB,6LAAC;;;;;;;;;;;kCAI1B,6LAAC;;0CACG,6LAAC;gCACG,MAAK;gCACL,SAAW;gCACX,UAAU,IAAM,kBAAkB,CAAC;gCACnC,WAAU;;;;;;4BACZ;;;;;;;;;;;;;0BAQR,6LAAC;gBACC,SAAS,IAAM,iBAAiB;gBAChC,WAAU;0BACX;;;;;;YAGA,0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCAAO;;;;;;kCACR,6LAAC;wBAAI,WAAU;kCAA2B;;;;;;;;;;;;0BAGhD,6LAAC;gBACG,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAKP;GA7HwB;KAAA"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}